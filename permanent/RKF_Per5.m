% Recursive Koszul Flattening of Per6
n = 5;
syms a [n];
det = det(a); % Note that later, we take abs() when we construct the matrix as we consider the permanent tensor.

% Costruct psi_i.
% It corresponds to the wedge product map with respect to the i-th basis of the vector space.
N1 = nchoosek(n,1);
N2 = nchoosek(n,2);
N3 = nchoosek(n,3);
N4 = nchoosek(n,4);
psi1 = zeros(N2,N1,n);
psi2 = zeros(N3,N2,n);
psi3 = zeros(N4,N3,n);

% Input psi1
psi1(:,:,1) = [0,1,0,0,0;0,0,1,0,0;0,0,0,1,0;0,0,0,0,1;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0];
psi1(:,:,2) = [-1,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,1,0,0;0,0,0,1,0;0,0,0,0,1;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0];
psi1(:,:,3) = [0,0,0,0,0;-1,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,-1,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,1,0;0,0,0,0,1;0,0,0,0,0];
psi1(:,:,4) = [0,0,0,0,0;0,0,0,0,0;-1,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,-1,0,0,0;0,0,0,0,0;0,0,-1,0,0;0,0,0,0,0;0,0,0,0,1];
psi1(:,:,5) = [0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;-1,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,-1,0,0,0;0,0,0,0,0;0,0,-1,0,0;0,0,0,-1,0];

% Input psi2
psi2(:,:,1) = [0,0,0,0,1,0,0,0,0,0;0,0,0,0,0,1,0,0,0,0;0,0,0,0,0,0,1,0,0,0;0,0,0,0,0,0,0,1,0,0;0,0,0,0,0,0,0,0,1,0;0,0,0,0,0,0,0,0,0,1;0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0];
psi2(:,:,2) = [0,-1,0,0,0,0,0,0,0,0;0,0,-1,0,0,0,0,0,0,0;0,0,0,-1,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,1,0,0;0,0,0,0,0,0,0,0,1,0;0,0,0,0,0,0,0,0,0,1;0,0,0,0,0,0,0,0,0,0];
psi2(:,:,3) = [1,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,-1,0,0,0,0,0,0,0;0,0,0,-1,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,-1,0,0,0,0;0,0,0,0,0,0,-1,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,1];
psi2(:,:,4) = [0,0,0,0,0,0,0,0,0,0;1,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,1,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,0,-1,0,0,0,0,0,0;0,0,0,0,1,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,-1,0,0,0;0,0,0,0,0,0,0,0,-1,0];
psi2(:,:,5) = [0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;1,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,1,0,0,0,0,0,0,0,0;0,0,1,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,0,0,1,0,0,0,0,0;0,0,0,0,0,1,0,0,0,0;0,0,0,0,0,0,0,1,0,0];

% Input psi3
psi3(:,:,1) = [0,0,0,0,0,0,1,0,0,0;0,0,0,0,0,0,0,1,0,0;0,0,0,0,0,0,0,0,1,0;0,0,0,0,0,0,0,0,0,1;0,0,0,0,0,0,0,0,0,0];
psi3(:,:,2) = [0,0,0,-1,0,0,0,0,0,0;0,0,0,0,-1,0,0,0,0,0;0,0,0,0,0,-1,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,1];
psi3(:,:,3) = [0,1,0,0,0,0,0,0,0,0;0,0,1,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,-1,0,0,0,0;0,0,0,0,0,0,0,0,-1,0];
psi3(:,:,4) = [-1,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0;0,0,1,0,0,0,0,0,0,0;0,0,0,0,1,0,0,0,0,0;0,0,0,0,0,0,0,1,0,0];
psi3(:,:,5) = [0,0,0,0,0,0,0,0,0,0;-1,0,0,0,0,0,0,0,0,0;0,-1,0,0,0,0,0,0,0,0;0,0,0,-1,0,0,0,0,0,0;0,0,0,0,0,0,-1,0,0,0];

% Construct the matrix correponding to the recursive Koszul flattening
N = nchoosek(5,1)*nchoosek(5,2)*nchoosek(5,3)*n;
kosz = sparse(N,N);
flat = zeros(n,n,n,n,n);
for p = 1:n
    diff1 = diff(det,a(1,p));
    for q = 1:n
        if length(unique([p,q])) ~= length([p,q])
            continue
        end
        diff2 = diff(diff1,a(2,q));
        kron12 = sparse(kron(psi1(:,:,p),psi2(:,:,q)));
        for r = 1:n
            if length(unique([p,q,r])) ~= length([p,q,r])
                continue
            end
            diff3 = diff(diff2,a(3,r));
            sparsePsi = sparse(psi3(:,:,r));
            kron123 = spkron(kron12,sparsePsi);
            for i = 1:n
                if length(unique([p,q,r,i])) ~= length([p,q,r,i])
                    continue
                end
                diff4 = diff(diff3,a(4,i));
                for j = 1:n
                    if length(unique([p,q,r,i,j])) ~= length([p,q,r,i,j])
                        continue
                    end
                    flat(i,j,p,q,r) = abs(diff(diff4,a(5,j)));
                    disp([p,q,r,i,j]);
                end
            end
            kosz = kosz + spkron(kron123,sparse(flat(:,:,p,q,r)));
        end
    end
end

% Calculate the rank
orbitmat = readmatrix('orbitmat5.dat');
tic;
rk = getRankSymm(kosz, orbitmat, 5)    % rank: 1426, lower bound of brk(Per5): 15
x=toc;
x